From 08d58a26fb4cad60f097bbd07668cfc515a5340a Mon Sep 17 00:00:00 2001
From: Ralf Gommers <ralf.gommers@gmail.com>
Date: Thu, 6 Oct 2022 10:34:34 +0200
Subject: [PATCH] TST: one more fix for executable bit test

This was failing when building in Docker, see
https://github.com/conda-forge/meson-python-feedstock/pull/7
---
 tests/test_sdist.py | 38 ++++++++++++++++++++++++++++----------
 1 file changed, 28 insertions(+), 10 deletions(-)

diff --git a/tests/test_sdist.py b/tests/test_sdist.py
index 1793456..63fceb8 100644
--- a/tests/test_sdist.py
+++ b/tests/test_sdist.py
@@ -74,14 +74,32 @@ def test_contents_unstaged(package_pure, tmpdir):
 def test_executable_bit(sdist_executable_bit):
     sdist = tarfile.open(sdist_executable_bit, 'r:gz')
 
-    assert set((tar.name, tar.mode) for tar in sdist.getmembers()) == {
-        ('executable_bit-1.0.0/PKG-INFO', 420),
-        # We match the executable bit on everything
-        # but PKG-INFO(we create this ourselves)
-        # Note: File perms are in octal, but Python returns it in int
-        ('executable_bit-1.0.0/example-script.py', int('755', 8)),
-        ('executable_bit-1.0.0/example.c', int('644', 8)),
-        ('executable_bit-1.0.0/executable_module.py', int('755', 8)),
-        ('executable_bit-1.0.0/meson.build', int('644', 8)),
-        ('executable_bit-1.0.0/pyproject.toml', int('644', 8)),
+    expected = {
+        'executable_bit-1.0.0/PKG-INFO': None,
+        'executable_bit-1.0.0/example-script.py': True,
+        'executable_bit-1.0.0/example.c': False,
+        'executable_bit-1.0.0/executable_module.py': True,
+        'executable_bit-1.0.0/meson.build': False,
+        'executable_bit-1.0.0/pyproject.toml': False,
     }
+    assert set(tar.name for tar in sdist.getmembers()) == set(expected.keys())
+
+    def has_execbit(mode):
+        # Note: File perms are in octal, but Python returns it in int
+        # We check multiple modes, because Docker may set group permissions to
+        # match owner permissions
+        modes_execbit = (int('755', 8), int('775', 8))
+        modes_nonexecbit = (int('644', 8), int('664', 8))
+        if mode in modes_execbit:
+            return True
+        elif mode in modes_nonexecbit:
+            return False
+        else:
+            raise RuntimeError(f"Unknown file permissions mode: {mode}")
+
+    for name, mode in set((tar.name, tar.mode) for tar in sdist.getmembers()):
+        if 'PKG-INFO' in name:
+            # We match the executable bit on everything but PKG-INFO (we create
+            # this ourselves)
+            continue
+        assert has_execbit(mode) == expected[name], f'Wrong mode for {name}: {mode}'
-- 
2.32.0 (Apple Git-132)

